<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>