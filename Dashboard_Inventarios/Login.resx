<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>